{"ast":null,"code":"var _jsxFileName = \"Z:\\\\RH\\\\frontend\\\\src\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Drawer, IconButton, Badge, List, ListItem, ListItemText, Button } from '@mui/material';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Notifications({\n  user\n}) {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    if (!user) return;\n    fetch(`http://localhost:5000/api/notifications/${user.id}`).then(res => res.json()).then(setNotifications);\n  }, [user, open]);\n  const markAsRead = async id => {\n    await fetch(`http://localhost:5000/api/notifications/${id}/read`, {\n      method: 'PUT'\n    });\n    setNotifications(notifications.map(n => n._id === id ? {\n      ...n,\n      read: true\n    } : n));\n  };\n  const unreadCount = notifications.filter(n => !n.read).length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"inherit\",\n      onClick: () => setOpen(true),\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: unreadCount,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: open,\n      onClose: () => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: 350\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), notifications.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"No notifications.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), notifications.map(n => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            bgcolor: n.read ? '#f5f5f5' : '#e3f2fd'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: n.message,\n            secondary: new Date(n.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), !n.read && /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => markAsRead(n._id),\n            children: \"Mark as read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, n._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Notifications, \"ZflISDzBOzbbyBmXEuS+52rF1m0=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","Drawer","IconButton","Badge","List","ListItem","ListItemText","Button","NotificationsIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","user","_s","open","setOpen","notifications","setNotifications","fetch","id","then","res","json","markAsRead","method","map","n","_id","read","unreadCount","filter","length","children","color","onClick","badgeContent","fileName","_jsxFileName","lineNumber","columnNumber","anchor","onClose","sx","width","primary","bgcolor","message","secondary","Date","createdAt","toLocaleString","size","_c","$RefreshReg$"],"sources":["Z:/RH/frontend/src/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Drawer, IconButton, Badge, List, ListItem, ListItemText, Button } from '@mui/material';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\nfunction Notifications({ user }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    fetch(`http://localhost:5000/api/notifications/${user.id}`)\r\n      .then(res => res.json())\r\n      .then(setNotifications);\r\n  }, [user, open]);\r\n\r\n  const markAsRead = async (id) => {\r\n    await fetch(`http://localhost:5000/api/notifications/${id}/read`, { method: 'PUT' });\r\n    setNotifications(notifications.map(n => n._id === id ? { ...n, read: true } : n));\r\n  };\r\n\r\n  const unreadCount = notifications.filter(n => !n.read).length;\r\n\r\n  return (\r\n    <>\r\n      <IconButton color=\"inherit\" onClick={() => setOpen(true)}>\r\n        <Badge badgeContent={unreadCount} color=\"error\">\r\n          <NotificationsIcon />\r\n        </Badge>\r\n      </IconButton>\r\n      <Drawer anchor=\"right\" open={open} onClose={() => setOpen(false)}>\r\n        <List sx={{ width: 350 }}>\r\n          <ListItem>\r\n            <ListItemText primary=\"Notifications\" />\r\n          </ListItem>\r\n          {notifications.length === 0 && (\r\n            <ListItem>\r\n              <ListItemText primary=\"No notifications.\" />\r\n            </ListItem>\r\n          )}\r\n          {notifications.map(n => (\r\n            <ListItem key={n._id} sx={{ bgcolor: n.read ? '#f5f5f5' : '#e3f2fd' }}>\r\n              <ListItemText\r\n                primary={n.message}\r\n                secondary={new Date(n.createdAt).toLocaleString()}\r\n              />\r\n              {!n.read && (\r\n                <Button size=\"small\" onClick={() => markAsRead(n._id)}>Mark as read</Button>\r\n              )}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}