{"ast":null,"code":"var _jsxFileName = \"Z:\\\\RH\\\\frontend\\\\src\\\\Bookmarks.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Paper, Button, Grid, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Bookmarks({\n  user\n}) {\n  _s();\n  const [bookmarks, setBookmarks] = useState([]);\n  useEffect(() => {\n    if (!user) return;\n    fetch(`http://localhost:5000/api/bookmarks/${user.id}`).then(res => res.json()).then(setBookmarks);\n  }, [user]);\n  const handleRemove = async bookmarkId => {\n    await fetch(`http://localhost:5000/api/bookmarks/${bookmarkId}`, {\n      method: 'DELETE'\n    });\n    setBookmarks(bookmarks.filter(b => b._id !== bookmarkId));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: \"md\",\n    mx: \"auto\",\n    mt: 6,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        p: 4,\n        borderRadius: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        fontWeight: 700,\n        gutterBottom: true,\n        children: \"Your Bookmarks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [bookmarks.length === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"No bookmarks yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), bookmarks.map(b => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"[\", b.type, \"] \", b.item]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"error\",\n              variant: \"outlined\",\n              onClick: () => handleRemove(b._id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, b._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Bookmarks, \"GYcTr9yW8Gu+CnWqN7rlwR8uEC0=\");\n_c = Bookmarks;\nfunction ForumPostCard({\n  post,\n  user\n}) {\n  _s2();\n  const [bookmarked, setBookmarked] = useState(false);\n  const [bookmarkId, setBookmarkId] = useState(null);\n  useEffect(() => {\n    if (!user) return;\n    fetch(`http://localhost:5000/api/bookmarks/user/${user.id}/type/forum`).then(res => res.json()).then(data => {\n      const found = data.find(b => b.item === post._id);\n      if (found) {\n        setBookmarked(true);\n        setBookmarkId(found._id);\n      } else {\n        setBookmarked(false);\n        setBookmarkId(null);\n      }\n    });\n  }, [user, post._id]);\n  const handleBookmark = async () => {\n    if (!user) return;\n    if (bookmarked && bookmarkId) {\n      // Unbookmark\n      await fetch(`http://localhost:5000/api/bookmarks/${bookmarkId}`, {\n        method: 'DELETE'\n      });\n      setBookmarked(false);\n      setBookmarkId(null);\n    } else {\n      // Bookmark\n      const res = await fetch('http://localhost:5000/api/bookmarks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user.id,\n          type: 'forum',\n          item: post._id\n        })\n      });\n      const data = await res.json();\n      setBookmarked(true);\n      setBookmarkId(data._id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: bookmarked ? 'contained' : 'outlined',\n    color: \"warning\",\n    onClick: handleBookmark,\n    children: bookmarked ? 'Bookmarked' : 'Bookmark'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s2(ForumPostCard, \"4awbMazhj8tKjHOhoD/z37NHjfE=\");\n_c2 = ForumPostCard;\nexport { Bookmarks, ForumPostCard };\nvar _c, _c2;\n$RefreshReg$(_c, \"Bookmarks\");\n$RefreshReg$(_c2, \"ForumPostCard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Paper","Button","Grid","Divider","jsxDEV","_jsxDEV","Bookmarks","user","_s","bookmarks","setBookmarks","fetch","id","then","res","json","handleRemove","bookmarkId","method","filter","b","_id","maxWidth","mx","mt","children","elevation","sx","p","borderRadius","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","container","spacing","length","item","xs","color","map","display","justifyContent","alignItems","type","onClick","_c","ForumPostCard","post","_s2","bookmarked","setBookmarked","setBookmarkId","data","found","find","handleBookmark","headers","body","JSON","stringify","_c2","$RefreshReg$"],"sources":["Z:/RH/frontend/src/Bookmarks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography, Paper, Button, Grid, Divider } from '@mui/material';\r\n\r\nfunction Bookmarks({ user }) {\r\n  const [bookmarks, setBookmarks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    fetch(`http://localhost:5000/api/bookmarks/${user.id}`)\r\n      .then(res => res.json())\r\n      .then(setBookmarks);\r\n  }, [user]);\r\n\r\n  const handleRemove = async (bookmarkId) => {\r\n    await fetch(`http://localhost:5000/api/bookmarks/${bookmarkId}`, { method: 'DELETE' });\r\n    setBookmarks(bookmarks.filter(b => b._id !== bookmarkId));\r\n  };\r\n\r\n  return (\r\n    <Box maxWidth=\"md\" mx=\"auto\" mt={6}>\r\n      <Paper elevation={4} sx={{ p: 4, borderRadius: 3 }}>\r\n        <Typography variant=\"h5\" fontWeight={700} gutterBottom>\r\n          Your Bookmarks\r\n        </Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        <Grid container spacing={2}>\r\n          {bookmarks.length === 0 && (\r\n            <Grid item xs={12}>\r\n              <Typography color=\"text.secondary\">No bookmarks yet.</Typography>\r\n            </Grid>\r\n          )}\r\n          {bookmarks.map(b => (\r\n            <Grid item xs={12} key={b._id}>\r\n              <Paper sx={{ p: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography>\r\n                  [{b.type}] {b.item}\r\n                </Typography>\r\n                <Button color=\"error\" variant=\"outlined\" onClick={() => handleRemove(b._id)}>\r\n                  Remove\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction ForumPostCard({ post, user }) {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n  const [bookmarkId, setBookmarkId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    fetch(`http://localhost:5000/api/bookmarks/user/${user.id}/type/forum`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const found = data.find(b => b.item === post._id);\r\n        if (found) {\r\n          setBookmarked(true);\r\n          setBookmarkId(found._id);\r\n        } else {\r\n          setBookmarked(false);\r\n          setBookmarkId(null);\r\n        }\r\n      });\r\n  }, [user, post._id]);\r\n\r\n  const handleBookmark = async () => {\r\n    if (!user) return;\r\n    if (bookmarked && bookmarkId) {\r\n      // Unbookmark\r\n      await fetch(`http://localhost:5000/api/bookmarks/${bookmarkId}`, { method: 'DELETE' });\r\n      setBookmarked(false);\r\n      setBookmarkId(null);\r\n    } else {\r\n      // Bookmark\r\n      const res = await fetch('http://localhost:5000/api/bookmarks/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user: user.id, type: 'forum', item: post._id })\r\n      });\r\n      const data = await res.json();\r\n      setBookmarked(true);\r\n      setBookmarkId(data._id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant={bookmarked ? 'contained' : 'outlined'}\r\n      color=\"warning\"\r\n      onClick={handleBookmark}\r\n    >\r\n      {bookmarked ? 'Bookmarked' : 'Bookmark'}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport { Bookmarks, ForumPostCard };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}