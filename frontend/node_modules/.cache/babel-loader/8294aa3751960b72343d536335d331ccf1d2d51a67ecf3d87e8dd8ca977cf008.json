{"ast":null,"code":"var _jsxFileName = \"Z:\\\\RH\\\\frontend\\\\src\\\\Forum.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, Paper, TextField, Button, Chip, Divider, Alert, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forum({\n  user\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [type, setType] = useState('idea');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [commentText, setCommentText] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [editId, setEditId] = useState(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [editContent, setEditContent] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    fetch('http://localhost:5000/api/forum').then(res => res.json()).then(data => {\n      setPosts(data);\n      setLoading(false);\n    });\n  }, []);\n  const handlePost = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    try {\n      const res = await fetch('http://localhost:5000/api/forum', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          type,\n          title,\n          content,\n          author: user.name,\n          authorId: user.id\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.error || 'Error posting');\n        return;\n      }\n      setPosts([data, ...posts]);\n      setTitle('');\n      setContent('');\n      setMessage('Posted!');\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  const handleEdit = post => {\n    setEditId(post._id);\n    setEditTitle(post.title);\n    setEditContent(post.content);\n  };\n  const handleEditSave = async id => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/forum/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.id,\n          title: editTitle,\n          content: editContent\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.error || 'Error editing post');\n        return;\n      }\n      setPosts(posts.map(p => p._id === id ? data : p));\n      setEditId(null);\n      setMessage('Post updated!');\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this post?')) return;\n    try {\n      const res = await fetch(`http://localhost:5000/api/forum/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.id\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.error || 'Error deleting post');\n        return;\n      }\n      setPosts(posts.filter(p => p._id !== id));\n      setMessage('Post deleted!');\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  const handleLike = async id => {\n    const res = await fetch(`http://localhost:5000/api/forum/${id}/like`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.id,\n        userName: user.name\n      })\n    });\n    const data = await res.json();\n    setPosts(posts.map(p => p._id === id ? data : p));\n  };\n  const handleComment = async id => {\n    const text = commentText[id];\n    if (!text) return;\n    const res = await fetch(`http://localhost:5000/api/forum/${id}/comment`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.id,\n        userName: user.name,\n        text\n      })\n    });\n    const data = await res.json();\n    setPosts(posts.map(p => p._id === id ? data : p));\n    setCommentText({\n      ...commentText,\n      [id]: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        p: 5,\n        borderRadius: 4,\n        width: '100%',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        fontWeight: 700,\n        gutterBottom: true,\n        children: \"Create a Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePost,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            SelectProps: {\n              native: true\n            },\n            label: \"Type\",\n            value: type,\n            onChange: e => setType(e.target.value),\n            sx: {\n              minWidth: 120\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"idea\",\n              children: \"Idea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"issue\",\n              children: \"Issue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true,\n          multiline: true,\n          rows: 4,\n          fullWidth: true,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          size: \"large\",\n          sx: {\n            fontWeight: 600\n          },\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        p: 5,\n        borderRadius: 4,\n        width: '100%',\n        bgcolor: '#f9f9f9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        fontWeight: 700,\n        gutterBottom: true,\n        children: \"Forum Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            borderRadius: 3,\n            bgcolor: '#fff'\n          },\n          elevation: 2,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: post.type,\n                color: post.type === 'idea' ? 'primary' : 'secondary',\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  ml: 1,\n                  display: 'inline'\n                },\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                sx: {\n                  ml: 2,\n                  display: 'inline'\n                },\n                children: [\"by \", post.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), post.authorId === user.id && /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => handleEdit(post),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"error\",\n                onClick: () => handleDelete(post._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), editId === post._id ? /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Title\",\n              value: editTitle,\n              onChange: e => setEditTitle(e.target.value),\n              sx: {\n                mt: 1,\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Content\",\n              value: editContent,\n              onChange: e => setEditContent(e.target.value),\n              sx: {\n                mt: 1,\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"small\",\n              onClick: () => handleEditSave(post._id),\n              sx: {\n                mt: 1,\n                mr: 1\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: () => setEditId(null),\n              sx: {\n                mt: 1\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 1\n            },\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 2,\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: () => handleLike(post._id),\n              children: [\"\\uD83D\\uDC4D \", post.likes.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              placeholder: \"Add comment\",\n              value: commentText[post._id] || '',\n              onChange: e => setCommentText({\n                ...commentText,\n                [post._id]: e.target.value\n              }),\n              sx: {\n                width: 200\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: () => handleComment(post._id),\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ForumPostCard, {\n              post: post,\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: post.comments.map((c, i) => /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 1,\n                mb: 1,\n                bgcolor: '#f5f5f5'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                fontWeight: 600,\n                children: c.userName || c.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: c.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: c.date ? new Date(c.date).toLocaleString() : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Forum, \"VnuwdQoqztJvUsVEgicMHEpwXNQ=\");\n_c = Forum;\nfunction ForumPostCard({\n  post,\n  user\n}) {\n  _s2();\n  const [bookmarked, setBookmarked] = useState(false);\n  const [bookmarkId, setBookmarkId] = useState(null);\n  useEffect(() => {\n    if (!user) return;\n    fetch(`http://localhost:5000/api/bookmarks/user/${user.id}/type/forum`).then(res => res.json()).then(data => {\n      const found = data.find(b => b.item === post._id);\n      if (found) {\n        setBookmarked(true);\n        setBookmarkId(found._id);\n      } else {\n        setBookmarked(false);\n        setBookmarkId(null);\n      }\n    });\n  }, [user, post._id]);\n  const handleBookmark = async () => {\n    if (!user) return;\n    if (bookmarked && bookmarkId) {\n      // Unbookmark\n      await fetch(`http://localhost:5000/api/bookmarks/${bookmarkId}`, {\n        method: 'DELETE'\n      });\n      setBookmarked(false);\n      setBookmarkId(null);\n    } else {\n      // Bookmark\n      const res = await fetch('http://localhost:5000/api/bookmarks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user.id,\n          type: 'forum',\n          item: post._id\n        })\n      });\n      const data = await res.json();\n      setBookmarked(true);\n      setBookmarkId(data._id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: bookmarked ? 'contained' : 'outlined',\n    color: \"warning\",\n    onClick: handleBookmark,\n    children: bookmarked ? 'Bookmarked' : 'Bookmark'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n}\n_s2(ForumPostCard, \"4awbMazhj8tKjHOhoD/z37NHjfE=\");\n_c2 = ForumPostCard;\nexport default Forum;\nvar _c, _c2;\n$RefreshReg$(_c, \"Forum\");\n$RefreshReg$(_c2, \"ForumPostCard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","Paper","TextField","Button","Chip","Divider","Alert","Stack","jsxDEV","_jsxDEV","Forum","user","_s","posts","setPosts","type","setType","title","setTitle","content","setContent","message","setMessage","error","setError","commentText","setCommentText","loading","setLoading","editId","setEditId","editTitle","setEditTitle","editContent","setEditContent","fetch","then","res","json","data","handlePost","e","preventDefault","method","headers","body","JSON","stringify","author","name","authorId","id","ok","err","handleEdit","post","_id","handleEditSave","userId","map","p","handleDelete","window","confirm","filter","handleLike","userName","handleComment","text","maxWidth","sx","mt","children","elevation","borderRadius","width","mb","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","onSubmit","direction","xs","sm","spacing","select","SelectProps","native","label","value","onChange","target","minWidth","required","fullWidth","multiline","rows","color","size","bgcolor","length","display","alignItems","justifyContent","ml","onClick","mr","gap","likes","placeholder","ForumPostCard","comments","c","i","date","Date","toLocaleString","_c","_s2","bookmarked","setBookmarked","bookmarkId","setBookmarkId","found","find","b","item","handleBookmark","_c2","$RefreshReg$"],"sources":["Z:/RH/frontend/src/Forum.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container, Box, Typography, Paper, TextField, Button, Chip, Divider, Alert, Stack\r\n} from '@mui/material';\r\n\r\nfunction Forum({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [type, setType] = useState('idea');\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [commentText, setCommentText] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [editId, setEditId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editContent, setEditContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch('http://localhost:5000/api/forum')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setPosts(data);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handlePost = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    setError('');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/forum', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          type,\r\n          title,\r\n          content,\r\n          author: user.name,\r\n          authorId: user.id\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setError(data.error || 'Error posting');\r\n        return;\r\n      }\r\n      setPosts([data, ...posts]);\r\n      setTitle('');\r\n      setContent('');\r\n      setMessage('Posted!');\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (post) => {\r\n    setEditId(post._id);\r\n    setEditTitle(post.title);\r\n    setEditContent(post.content);\r\n  };\r\n\r\n  const handleEditSave = async (id) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/forum/${id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          userId: user.id,\r\n          title: editTitle,\r\n          content: editContent\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setError(data.error || 'Error editing post');\r\n        return;\r\n      }\r\n      setPosts(posts.map(p => p._id === id ? data : p));\r\n      setEditId(null);\r\n      setMessage('Post updated!');\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this post?')) return;\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/forum/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userId: user.id })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setError(data.error || 'Error deleting post');\r\n        return;\r\n      }\r\n      setPosts(posts.filter(p => p._id !== id));\r\n      setMessage('Post deleted!');\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  const handleLike = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/api/forum/${id}/like`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userId: user.id, userName: user.name })\r\n    });\r\n    const data = await res.json();\r\n    setPosts(posts.map(p => p._id === id ? data : p));\r\n  };\r\n\r\n  const handleComment = async (id) => {\r\n    const text = commentText[id];\r\n    if (!text) return;\r\n    const res = await fetch(`http://localhost:5000/api/forum/${id}/comment`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userId: user.id, userName: user.name, text })\r\n    });\r\n    const data = await res.json();\r\n    setPosts(posts.map(p => p._id === id ? data : p));\r\n    setCommentText({ ...commentText, [id]: '' });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n      {/* Forum Post Form */}\r\n      <Paper elevation={4} sx={{ p: 5, borderRadius: 4, width: '100%', mb: 4 }}>\r\n        <Typography variant=\"h5\" fontWeight={700} gutterBottom>\r\n          Create a Post\r\n        </Typography>\r\n        {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n        {message && <Alert severity=\"success\" sx={{ mb: 2 }}>{message}</Alert>}\r\n        <form onSubmit={handlePost}>\r\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n            <TextField\r\n              select\r\n              SelectProps={{ native: true }}\r\n              label=\"Type\"\r\n              value={type}\r\n              onChange={e => setType(e.target.value)}\r\n              sx={{ minWidth: 120 }}\r\n            >\r\n              <option value=\"idea\">Idea</option>\r\n              <option value=\"issue\">Issue</option>\r\n            </TextField>\r\n            <TextField\r\n              label=\"Title\"\r\n              value={title}\r\n              onChange={e => setTitle(e.target.value)}\r\n              required\r\n              fullWidth\r\n            />\r\n          </Stack>\r\n          <TextField\r\n            label=\"Description\"\r\n            value={content}\r\n            onChange={e => setContent(e.target.value)}\r\n            required\r\n            multiline\r\n            rows={4}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth size=\"large\" sx={{ fontWeight: 600 }}>\r\n            Post\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n\r\n      {/* Forum Posts List */}\r\n      <Paper elevation={4} sx={{ p: 5, borderRadius: 4, width: '100%', bgcolor: '#f9f9f9' }}>\r\n        <Typography variant=\"h5\" fontWeight={700} gutterBottom>\r\n          Forum Posts\r\n        </Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        {loading ? (\r\n          <Typography>Loading...</Typography>\r\n        ) : posts.length === 0 ? (\r\n          <Typography color=\"text.secondary\">No posts yet.</Typography>\r\n        ) : (\r\n          <Stack spacing={3}>\r\n            {posts.map(post => (\r\n              <Paper key={post._id} sx={{ p: 3, borderRadius: 3, bgcolor: '#fff' }} elevation={2}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Box>\r\n                    <Chip label={post.type} color={post.type === 'idea' ? 'primary' : 'secondary'} size=\"small\" />\r\n                    <Typography variant=\"h6\" sx={{ ml: 1, display: 'inline' }}>{post.title}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" sx={{ ml: 2, display: 'inline' }}>\r\n                      by {post.author}\r\n                    </Typography>\r\n                  </Box>\r\n                  {post.authorId === user.id && (\r\n                    <Box>\r\n                      <Button size=\"small\" onClick={() => handleEdit(post)}>Edit</Button>\r\n                      <Button size=\"small\" color=\"error\" onClick={() => handleDelete(post._id)}>Delete</Button>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n                {editId === post._id ? (\r\n                  <Box>\r\n                    <TextField\r\n                      label=\"Title\"\r\n                      value={editTitle}\r\n                      onChange={e => setEditTitle(e.target.value)}\r\n                      sx={{ mt: 1, mr: 1 }}\r\n                    />\r\n                    <TextField\r\n                      label=\"Content\"\r\n                      value={editContent}\r\n                      onChange={e => setEditContent(e.target.value)}\r\n                      sx={{ mt: 1, mr: 1 }}\r\n                    />\r\n                    <Button variant=\"contained\" size=\"small\" onClick={() => handleEditSave(post._id)} sx={{ mt: 1, mr: 1 }}>\r\n                      Save\r\n                    </Button>\r\n                    <Button variant=\"outlined\" size=\"small\" onClick={() => setEditId(null)} sx={{ mt: 1 }}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Box>\r\n                ) : (\r\n                  <Typography sx={{ mt: 1 }}>{post.content}</Typography>\r\n                )}\r\n                <Box display=\"flex\" alignItems=\"center\" gap={2} mt={2}>\r\n                  <Button size=\"small\" onClick={() => handleLike(post._id)}>\r\n                    👍 {post.likes.length}\r\n                  </Button>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    placeholder=\"Add comment\"\r\n                    value={commentText[post._id] || ''}\r\n                    onChange={e => setCommentText({ ...commentText, [post._id]: e.target.value })}\r\n                    sx={{ width: 200 }}\r\n                  />\r\n                  <Button size=\"small\" onClick={() => handleComment(post._id)}>Comment</Button>\r\n                  <ForumPostCard post={post} user={user} />\r\n                </Box>\r\n                <Box mt={2}>\r\n                  {post.comments.map((c, i) => (\r\n                    <Paper key={i} sx={{ p: 1, mb: 1, bgcolor: '#f5f5f5' }}>\r\n                      <Typography variant=\"caption\" fontWeight={600}>{c.userName || c.user}</Typography>\r\n                      <Typography variant=\"body2\">{c.text}</Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {c.date ? new Date(c.date).toLocaleString() : ''}\r\n                      </Typography>\r\n                    </Paper>\r\n                  ))}\r\n                </Box>\r\n              </Paper>\r\n            ))}\r\n          </Stack>\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ForumPostCard({ post, user }) {\r\n  const [bookmarked, setBookmarked] = useState(false);\r\n  const [bookmarkId, setBookmarkId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    fetch(`http://localhost:5000/api/bookmarks/user/${user.id}/type/forum`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const found = data.find(b => b.item === post._id);\r\n        if (found) {\r\n          setBookmarked(true);\r\n          setBookmarkId(found._id);\r\n        } else {\r\n          setBookmarked(false);\r\n          setBookmarkId(null);\r\n        }\r\n      });\r\n  }, [user, post._id]);\r\n\r\n  const handleBookmark = async () => {\r\n    if (!user) return;\r\n    if (bookmarked && bookmarkId) {\r\n      // Unbookmark\r\n      await fetch(`http://localhost:5000/api/bookmarks/${bookmarkId}`, { method: 'DELETE' });\r\n      setBookmarked(false);\r\n      setBookmarkId(null);\r\n    } else {\r\n      // Bookmark\r\n      const res = await fetch('http://localhost:5000/api/bookmarks/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user: user.id, type: 'forum', item: post._id })\r\n      });\r\n      const data = await res.json();\r\n      setBookmarked(true);\r\n      setBookmarkId(data._id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant={bookmarked ? 'contained' : 'outlined'}\r\n      color=\"warning\"\r\n      onClick={handleBookmark}\r\n    >\r\n      {bookmarked ? 'Bookmarked' : 'Bookmark'}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default Forum;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}