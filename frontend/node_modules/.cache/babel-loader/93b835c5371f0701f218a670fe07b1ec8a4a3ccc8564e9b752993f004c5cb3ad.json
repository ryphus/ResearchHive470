{"ast":null,"code":"var _jsxFileName = \"Z:\\\\RH\\\\frontend\\\\src\\\\Forum.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, Paper, TextField, Button, Chip, Divider, Alert, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forum({\n  user\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [type, setType] = useState('idea');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [commentText, setCommentText] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [editId, setEditId] = useState(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [editContent, setEditContent] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    fetch('http://localhost:5000/api/forum').then(res => res.json()).then(data => {\n      setPosts(data);\n      setLoading(false);\n    });\n  }, []);\n  const handlePost = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    try {\n      const res = await fetch('http://localhost:5000/api/forum', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          type,\n          title,\n          content,\n          author: user.name,\n          authorId: user.id\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.error || 'Error posting');\n        return;\n      }\n      setPosts([data, ...posts]);\n      setTitle('');\n      setContent('');\n      setMessage('Posted!');\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  const handleEdit = post => {\n    setEditId(post._id);\n    setEditTitle(post.title);\n    setEditContent(post.content);\n  };\n  const handleEditSave = async id => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/forum/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.id,\n          title: editTitle,\n          content: editContent\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.error || 'Error editing post');\n        return;\n      }\n      setPosts(posts.map(p => p._id === id ? data : p));\n      setEditId(null);\n      setMessage('Post updated!');\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this post?')) return;\n    try {\n      const res = await fetch(`http://localhost:5000/api/forum/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.id\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.error || 'Error deleting post');\n        return;\n      }\n      setPosts(posts.filter(p => p._id !== id));\n      setMessage('Post deleted!');\n    } catch (err) {\n      setError('Network error');\n    }\n  };\n  const handleLike = async id => {\n    const res = await fetch(`http://localhost:5000/api/forum/${id}/like`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.id,\n        userName: user.name\n      })\n    });\n    const data = await res.json();\n    setPosts(posts.map(p => p._id === id ? data : p));\n  };\n  const handleComment = async id => {\n    const text = commentText[id];\n    if (!text) return;\n    const res = await fetch(`http://localhost:5000/api/forum/${id}/comment`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.id,\n        userName: user.name,\n        text\n      })\n    });\n    const data = await res.json();\n    setPosts(posts.map(p => p._id === id ? data : p));\n    setCommentText({\n      ...commentText,\n      [id]: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: 700,\n        gutterBottom: true,\n        children: \"Forum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 20,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              borderRadius: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontWeight: 600,\n              gutterBottom: true,\n              children: \"Create a Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              sx: {\n                mb: 2\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              sx: {\n                mb: 2\n              },\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handlePost,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                SelectProps: {\n                  native: true\n                },\n                label: \"Type\",\n                value: type,\n                onChange: e => setType(e.target.value),\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"idea\",\n                  children: \"Idea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"issue\",\n                  children: \"Issue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Title\",\n                value: title,\n                onChange: e => setTitle(e.target.value),\n                required: true,\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Description\",\n                value: content,\n                onChange: e => setContent(e.target.value),\n                required: true,\n                multiline: true,\n                rows: 3,\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              borderRadius: 3,\n              minHeight: 400\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontWeight: 600,\n              gutterBottom: true,\n              children: \"Forum Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No posts yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(Box, {\n              mb: 3,\n              p: 2,\n              component: Paper,\n              elevation: 1,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    label: post.type,\n                    color: post.type === 'idea' ? 'primary' : 'secondary',\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    sx: {\n                      ml: 1,\n                      display: 'inline'\n                    },\n                    children: post.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    sx: {\n                      ml: 2,\n                      display: 'inline'\n                    },\n                    children: [\"by \", post.author]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this), post.authorId === user.id && /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    onClick: () => handleEdit(post),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: () => handleDelete(post._id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this), editId === post._id ? /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Title\",\n                  value: editTitle,\n                  onChange: e => setEditTitle(e.target.value),\n                  sx: {\n                    mt: 1,\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Content\",\n                  value: editContent,\n                  onChange: e => setEditContent(e.target.value),\n                  sx: {\n                    mt: 1,\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"small\",\n                  onClick: () => handleEditSave(post._id),\n                  sx: {\n                    mt: 1,\n                    mr: 1\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: () => setEditId(null),\n                  sx: {\n                    mt: 1\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  mt: 1\n                },\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 2,\n                mt: 2,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => handleLike(post._id),\n                  children: [\"\\uD83D\\uDC4D \", post.likes.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  size: \"small\",\n                  placeholder: \"Add comment\",\n                  value: commentText[post._id] || '',\n                  onChange: e => setCommentText({\n                    ...commentText,\n                    [post._id]: e.target.value\n                  }),\n                  sx: {\n                    width: 200\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: () => handleComment(post._id),\n                  children: \"Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                children: post.comments.map((c, i) => /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 1,\n                    mb: 1,\n                    bgcolor: '#f5f5f5'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    fontWeight: 600,\n                    children: c.userName || c.user\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: c.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: c.date ? new Date(c.date).toLocaleString() : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)]\n            }, post._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Forum, \"VnuwdQoqztJvUsVEgicMHEpwXNQ=\");\n_c = Forum;\nexport default Forum;\nvar _c;\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","Paper","TextField","Button","Chip","Divider","Alert","Grid","jsxDEV","_jsxDEV","Forum","user","_s","posts","setPosts","type","setType","title","setTitle","content","setContent","message","setMessage","error","setError","commentText","setCommentText","loading","setLoading","editId","setEditId","editTitle","setEditTitle","editContent","setEditContent","fetch","then","res","json","data","handlePost","e","preventDefault","method","headers","body","JSON","stringify","author","name","authorId","id","ok","err","handleEdit","post","_id","handleEditSave","userId","map","p","handleDelete","window","confirm","filter","handleLike","userName","handleComment","text","maxWidth","children","mt","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","mb","container","spacing","item","xs","md","elevation","borderRadius","severity","onSubmit","select","SelectProps","native","label","value","onChange","target","fullWidth","required","multiline","rows","color","minHeight","length","component","display","alignItems","justifyContent","size","ml","onClick","mr","gap","likes","placeholder","width","comments","c","i","bgcolor","date","Date","toLocaleString","_c","$RefreshReg$"],"sources":["Z:/RH/frontend/src/Forum.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container, Box, Typography, Paper, TextField, Button, Chip, Divider, Alert, Grid\r\n} from '@mui/material';\r\n\r\nfunction Forum({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [type, setType] = useState('idea');\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [commentText, setCommentText] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [editId, setEditId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editContent, setEditContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch('http://localhost:5000/api/forum')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setPosts(data);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handlePost = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    setError('');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/forum', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          type,\r\n          title,\r\n          content,\r\n          author: user.name,\r\n          authorId: user.id\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setError(data.error || 'Error posting');\r\n        return;\r\n      }\r\n      setPosts([data, ...posts]);\r\n      setTitle('');\r\n      setContent('');\r\n      setMessage('Posted!');\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (post) => {\r\n    setEditId(post._id);\r\n    setEditTitle(post.title);\r\n    setEditContent(post.content);\r\n  };\r\n\r\n  const handleEditSave = async (id) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/forum/${id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          userId: user.id,\r\n          title: editTitle,\r\n          content: editContent\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setError(data.error || 'Error editing post');\r\n        return;\r\n      }\r\n      setPosts(posts.map(p => p._id === id ? data : p));\r\n      setEditId(null);\r\n      setMessage('Post updated!');\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Are you sure you want to delete this post?')) return;\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/forum/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userId: user.id })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setError(data.error || 'Error deleting post');\r\n        return;\r\n      }\r\n      setPosts(posts.filter(p => p._id !== id));\r\n      setMessage('Post deleted!');\r\n    } catch (err) {\r\n      setError('Network error');\r\n    }\r\n  };\r\n\r\n  const handleLike = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/api/forum/${id}/like`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userId: user.id, userName: user.name })\r\n    });\r\n    const data = await res.json();\r\n    setPosts(posts.map(p => p._id === id ? data : p));\r\n  };\r\n\r\n  const handleComment = async (id) => {\r\n    const text = commentText[id];\r\n    if (!text) return;\r\n    const res = await fetch(`http://localhost:5000/api/forum/${id}/comment`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userId: user.id, userName: user.name, text })\r\n    });\r\n    const data = await res.json();\r\n    setPosts(posts.map(p => p._id === id ? data : p));\r\n    setCommentText({ ...commentText, [id]: '' });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box mt={4}>\r\n        <Typography variant=\"h4\" fontWeight={700} gutterBottom>\r\n          Forum\r\n        </Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        <Grid container spacing={4}>\r\n          {/* Left: Post Form */}\r\n          <Grid item xs={20} md={8}>\r\n            <Paper elevation={3} sx={{ p: 3, borderRadius: 3 }}>\r\n              <Typography variant=\"h6\" fontWeight={600} gutterBottom>\r\n                Create a Post\r\n              </Typography>\r\n              {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n              {message && <Alert severity=\"success\" sx={{ mb: 2 }}>{message}</Alert>}\r\n              <form onSubmit={handlePost}>\r\n                <TextField\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  label=\"Type\"\r\n                  value={type}\r\n                  onChange={e => setType(e.target.value)}\r\n                  fullWidth\r\n                  sx={{ mb: 2 }}\r\n                >\r\n                  <option value=\"idea\">Idea</option>\r\n                  <option value=\"issue\">Issue</option>\r\n                </TextField>\r\n                <TextField\r\n                  label=\"Title\"\r\n                  value={title}\r\n                  onChange={e => setTitle(e.target.value)}\r\n                  required\r\n                  fullWidth\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <TextField\r\n                  label=\"Description\"\r\n                  value={content}\r\n                  onChange={e => setContent(e.target.value)}\r\n                  required\r\n                  multiline\r\n                  rows={3}\r\n                  fullWidth\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                  Post\r\n                </Button>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          {/* Right: Forum Posts */}\r\n          <Grid item xs={12} md={8}>\r\n            <Paper elevation={3} sx={{ p: 3, borderRadius: 3, minHeight: 400 }}>\r\n              <Typography variant=\"h6\" fontWeight={600} gutterBottom>\r\n                Forum Posts\r\n              </Typography>\r\n              {loading ? (\r\n                <Typography>Loading...</Typography>\r\n              ) : posts.length === 0 ? (\r\n                <Typography color=\"text.secondary\">No posts yet.</Typography>\r\n              ) : (\r\n                posts.map(post => (\r\n                  <Box key={post._id} mb={3} p={2} component={Paper} elevation={1}>\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                      <Box>\r\n                        <Chip label={post.type} color={post.type === 'idea' ? 'primary' : 'secondary'} size=\"small\" />\r\n                        <Typography variant=\"h6\" sx={{ ml: 1, display: 'inline' }}>{post.title}</Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" sx={{ ml: 2, display: 'inline' }}>\r\n                          by {post.author}\r\n                        </Typography>\r\n                      </Box>\r\n                      {post.authorId === user.id && (\r\n                        <Box>\r\n                          <Button size=\"small\" onClick={() => handleEdit(post)}>Edit</Button>\r\n                          <Button size=\"small\" color=\"error\" onClick={() => handleDelete(post._id)}>Delete</Button>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                    {editId === post._id ? (\r\n                      <Box>\r\n                        <TextField\r\n                          label=\"Title\"\r\n                          value={editTitle}\r\n                          onChange={e => setEditTitle(e.target.value)}\r\n                          sx={{ mt: 1, mr: 1 }}\r\n                        />\r\n                        <TextField\r\n                          label=\"Content\"\r\n                          value={editContent}\r\n                          onChange={e => setEditContent(e.target.value)}\r\n                          sx={{ mt: 1, mr: 1 }}\r\n                        />\r\n                        <Button variant=\"contained\" size=\"small\" onClick={() => handleEditSave(post._id)} sx={{ mt: 1, mr: 1 }}>\r\n                          Save\r\n                        </Button>\r\n                        <Button variant=\"outlined\" size=\"small\" onClick={() => setEditId(null)} sx={{ mt: 1 }}>\r\n                          Cancel\r\n                        </Button>\r\n                      </Box>\r\n                    ) : (\r\n                      <Typography sx={{ mt: 1 }}>{post.content}</Typography>\r\n                    )}\r\n                    <Box display=\"flex\" alignItems=\"center\" gap={2} mt={2}>\r\n                      <Button size=\"small\" onClick={() => handleLike(post._id)}>\r\n                        👍 {post.likes.length}\r\n                      </Button>\r\n                      <TextField\r\n                        size=\"small\"\r\n                        placeholder=\"Add comment\"\r\n                        value={commentText[post._id] || ''}\r\n                        onChange={e => setCommentText({ ...commentText, [post._id]: e.target.value })}\r\n                        sx={{ width: 200 }}\r\n                      />\r\n                      <Button size=\"small\" onClick={() => handleComment(post._id)}>Comment</Button>\r\n                    </Box>\r\n                    <Box mt={2}>\r\n                      {post.comments.map((c, i) => (\r\n                        <Paper key={i} sx={{ p: 1, mb: 1, bgcolor: '#f5f5f5' }}>\r\n                          <Typography variant=\"caption\" fontWeight={600}>{c.userName || c.user}</Typography>\r\n                          <Typography variant=\"body2\">{c.text}</Typography>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {c.date ? new Date(c.date).toLocaleString() : ''}\r\n                          </Typography>\r\n                        </Paper>\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                ))\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Forum;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}